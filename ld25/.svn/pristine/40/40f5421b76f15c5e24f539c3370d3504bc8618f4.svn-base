package com.emveyh.ld25;

import java.awt.Font;

import com.badlogic.gdx.ApplicationListener;
import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.Color;
import com.badlogic.gdx.graphics.GL10;
import com.badlogic.gdx.graphics.OrthographicCamera;
import com.badlogic.gdx.graphics.g2d.BitmapFont;
import com.badlogic.gdx.graphics.g2d.SpriteBatch;
import com.bitfire.postprocessing.PostProcessor;
import com.bitfire.postprocessing.effects.Bloom;
import com.bitfire.postprocessing.effects.CrtMonitor;
import com.bitfire.postprocessing.effects.Vignette;
import com.bitfire.utils.ShaderLoader;
import com.emveyh.ld25.entity.EntityManager;
import com.emveyh.ld25.map.MapManager;

public class GdxGame implements ApplicationListener {
	private OrthographicCamera camera;
	private SpriteBatch batch;
	
	private PostProcessor postProcessor;
	
	private BitmapFont font;
	
	@Override
	public void create() {		
		float w = Gdx.graphics.getWidth();
		float h = Gdx.graphics.getHeight();
		
		camera = new OrthographicCamera();
		camera.setToOrtho(false, 800, 480);
		batch = new SpriteBatch();
		
		TextureManager.getInstance().init();
		MapManager.getInstance().init();
		
		ShaderLoader.BasePath = "data/shaders/";
        postProcessor = new PostProcessor( false, false, true );
        
        CrtMonitor crt = new CrtMonitor(false, false);
        Vignette vig = new Vignette(false);
        Bloom bloom = new Bloom( (int)(Gdx.graphics.getWidth() * 0.25f), (int)(Gdx.graphics.getHeight() * 0.25f) );
        bloom.setBloomIntesity(0.7f);
        vig.setIntensity(0.5f);
        
        
        postProcessor.addEffect(crt);
        postProcessor.addEffect(vig);
        postProcessor.addEffect(bloom);
		
        font = new BitmapFont(Gdx.files.internal("data/ps2_border.fnt"),
				Gdx.files.internal("data/ps2_border.png"), false);
        font.setScale(0.5f);
        
		
	}

	@Override
	public void dispose() {
		batch.dispose();
	//	texture.dispose();
	}

	@Override
	public void render() {		
		Gdx.gl.glClearColor(0, 0, 0, 0);
		Gdx.gl.glClear(GL10.GL_COLOR_BUFFER_BIT);
		
		postProcessor.capture();
		//render
		batch.setProjectionMatrix(camera.combined);
		batch.begin();
		MapManager.getInstance().renderMap(batch);
		EntityManager.getInstance().renderEntities(batch);
		font.setColor(Color.WHITE);
		font.setScale(0.5f);
		font.draw(batch, "Wave 1 / 10", 10, 450);
		font.draw(batch, "120 Gold", 250, 450);
		batch.draw(TextureManager.getInstance().getSprites()[8][0], 726, 416, 64,64);
		font.setScale(0.4f);
		font.setColor(Color.RED);
		font.draw(batch, "THE PRINCESS IS MINE!!", 430, 450);
		
		batch.end();
		postProcessor.render();
		
		
		//logic
		MapManager.getInstance().tick();
		InputManager.getInstance().tick();
		EntityManager.getInstance().tickEntities();
		
		
	}

	@Override
	public void resize(int width, int height) {
	}

	@Override
	public void pause() {
	}

	@Override
	public void resume() {
	}
}
